swagger: "2.0"
info:
  description: "UPP Golang Microservice Template short description - please amend"
  version: "1.0.0"
  title: "hi_kitty"
  contact:
    name: Universal Publishing
    email: Universal.Publishing.Platform@ft.com
host: api.ft.com
schemes:
  - http
  - https
basePath: /

paths:
  /hello:
    get:
      summary: Returns welcoming message
      description: Exactly what is says - returns welcome message
      produces:
        - text/plain; charset=utf-8
      responses:
        200:
          description: I said it - welcome message
          examples:
            text/plain; charset=utf-8: I give up it is "Hello Cookiecutter"
  /__ping:
    get:
      summary: Ping
      description: Returns "pong" if the server is running.
      produces:
        - text/plain; charset=utf-8
      responses:
        200:
          description: We return pong in plaintext only.
          examples:
            text/plain; charset=utf-8: pong
  /__health:
    get:
      summary: Healthchecks
      description: Runs application healthchecks and returns FT Healthcheck style json.
      produces:
        - application/json
      responses:
        200:
          description: Should always return 200 along with the output of the healthchecks - regardless of whether the healthchecks failed or not. Please inspect the overall `ok` property to see whether or not the application is healthy.
          examples:
            application/json:
              checks:
                - businessImpact: "No Business Impact."
                  checkOutput: "OK"
                  lastUpdated: "2017-01-16T10:26:47.222805121Z"
                  name: "hi_kitty healthchecks"
                  ok: true
                  panicGuide: "https://dewey.ft.com/hi_kitty.html"
                  severity: 1
                  technicalSummary: "TODO"
              description: TODO
              name: hi_kitty
              ok: true
              schemaVersion: 1
  /__build-info:
    get:
      summary: Build Information
      description: Returns application build info, such as the git repository and revision, the golang version it was built with, and the app release version.
      produces:
       - application/json; charset=UTF-8
      responses:
        200:
          description: Outputs build information as described in the summary.
          examples:
            application/json; charset=UTF-8:
              version: "0.0.7"
              repository: "https://github.com/Financial-Times/hi_kitty.git"
              revision: "7cdbdb18b4a518eef3ebb1b545fc124612f9d7cd"
              builder: "go version go1.6.3 linux/amd64"
              dateTime: "20161123122615"
  /__gtg:
    get:
      summary: Good To Go
      description: Lightly healthchecks the application, and returns a 200 if it's Good-To-Go.
      responses:
        200:
           description: The application is healthy enough to perform all its functions correctly - i.e. good to go.
        503:
           description: One or more of the applications healthchecks have failed, so please do not use the app. See the /__health endpoint for more detailed information.
